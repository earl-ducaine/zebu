;;; This file was generated by Zebu (Version 3.4.8)

(IN-PACKAGE "USER")
(REQUIRE "zebu-package")
(USE-PACKAGE "ZEBU")

(DEFSTRUCT (FS-OBJECT (:INCLUDE KB-DOMAIN))
           -EXTRAS)

(DEFSTRUCT
  (NEG-VARS (:INCLUDE FS-OBJECT)
            (:PRINT-FUNCTION
              (LAMBDA (ITEM STREAM
                            LEVEL
                            &AUX
                            (%R (NEG-VARS--MEMBERS ITEM)))
                      (DECLARE (IGNORE LEVEL))
                      (FORMAT STREAM
                              "(~a)"
                              (LET ((NEG-VAR+ %R))
                                (IF (NULL NEG-VAR+)
                                    ""
                                    (ZEBU::KB-SEQUENCE-PRINT NEG-VAR+
                                                             NIL
                                                             NIL)))))))
  -MEMBERS)

(DEFSTRUCT
  (NEG-VAR (:INCLUDE FS-OBJECT)
           (:PRINT-FUNCTION
             (LAMBDA (ITEM STREAM
                           LEVEL
                           &AUX
                           (%R (NEG-VAR--NUMBER ITEM)))
                     (DECLARE (IGNORE LEVEL))
                     (FORMAT STREAM "-%~a" %R))))
  -NUMBER)

(DEFSTRUCT
  (LABEL-VALUE-PAIR (:INCLUDE FS-OBJECT)
                    (:PRINT-FUNCTION PRINT-LABEL-VALUE-PAIR))
  -LABEL
  -VALUE)

(DEFSTRUCT (FS-TYPE-EXPR (:INCLUDE FS-OBJECT)))

(DEFSTRUCT
  (FS-TYPE-NEG (:INCLUDE FS-TYPE-EXPR)
               (:PRINT-FUNCTION
                 (LAMBDA
                   (ITEM STREAM
                         LEVEL
                         &AUX
                         (%R (FS-TYPE-NEG--TYPE ITEM)))
                   (DECLARE (IGNORE LEVEL))
                   (FORMAT STREAM "(:not ~a)" %R))))
  -TYPE)

(DEFSTRUCT
  (FS-TYPE-DISJ (:INCLUDE FS-TYPE-EXPR)
                (:PRINT-FUNCTION
                  (LAMBDA
                    (ITEM STREAM
                          LEVEL
                          &AUX
                          (%R (FS-TYPE-DISJ--TYPES ITEM)))
                    (DECLARE (IGNORE LEVEL))
                    (FORMAT STREAM
                            "(:or ~a)"
                            (LET ((TYPE+ %R))
                              (IF (NULL TYPE+)
                                  ""
                                  (ZEBU::KB-SEQUENCE-PRINT TYPE+ NIL NIL)))))))
  -TYPES)

(DEFSTRUCT
  (FS-TYPE-CONJ (:INCLUDE FS-TYPE-EXPR)
                (:PRINT-FUNCTION
                  (LAMBDA
                    (ITEM STREAM
                          LEVEL
                          &AUX
                          (%R (FS-TYPE-CONJ--TYPES ITEM)))
                    (DECLARE (IGNORE LEVEL))
                    (FORMAT STREAM
                            "(:and ~a)"
                            (LET ((TYPE+ %R))
                              (IF (NULL TYPE+)
                                  ""
                                  (ZEBU::KB-SEQUENCE-PRINT TYPE+ NIL NIL)))))))
  -TYPES)

(DEFSTRUCT
  (FS-ATOMAR (:INCLUDE FS-TYPE-EXPR)
             (:PRINT-FUNCTION
               (LAMBDA (ITEM STREAM
                             LEVEL
                             &AUX
                             (%R (FS-ATOMAR--VALUE ITEM)))
                       (DECLARE (IGNORE LEVEL))
                       (FORMAT STREAM "(:atom ~a)" %R))))
  -VALUE)

(DEFSTRUCT
  (FS-TYPE (:INCLUDE FS-TYPE-EXPR)
           (:PRINT-FUNCTION
             (LAMBDA
               (ITEM STREAM
                     LEVEL
                     &AUX
                     (%R (FS-TYPE--TYPE ITEM))
                     (%S (FS-TYPE--SORT-P ITEM)))
               (DECLARE (IGNORE LEVEL))
               (COND ((AND
                        (TYPEP %R
                               '(OR FS-ATOMAR FS-TYPE-NEG FS-TYPE-DISJ
                                 FS-TYPE-CONJ IDENTIFIER))
                        (IDENTIFIERP %S))
                      (FORMAT STREAM
                              "(:type ~a :sort-p ~a)"
                              %R
                              %S))
                     (T (FORMAT STREAM "(:type ~a)" %R))))))
  -TYPE
  -SORT-P)

(DEFSTRUCT (FEAT-TERM (:INCLUDE FS-OBJECT)))

(DEFSTRUCT
  (EMPTY-FS-LIST (:INCLUDE FEAT-TERM)
                 (:PRINT-FUNCTION
                   (LAMBDA (ITEM STREAM LEVEL)
                           (DECLARE (IGNORE ITEM STREAM LEVEL))
                           (FORMAT STREAM "<>")))))

(DEFSTRUCT
  (FS-LIST (:INCLUDE FEAT-TERM)
           (:PRINT-FUNCTION
             (LAMBDA
               (ITEM STREAM
                     LEVEL
                     &AUX
                     (%R (FS-LIST--FIRST ITEM))
                     (%S (FS-LIST--REST ITEM)))
               (DECLARE (IGNORE LEVEL))
               (COND ((TYPEP %R
                             '(OR FS-VAR TAGGED-TERM NEGATIVE-ATOMS FS-ATOM
                               FS-LIST EMPTY-FS-LIST FS-DISJ-TERM FS-CONJ-TERM
                               TYPED-FS-TERM))
                      (COND ((TYPEP %S
                                    '(OR FS-VAR TAGGED-TERM NEGATIVE-ATOMS
                                      FS-ATOM FS-LIST EMPTY-FS-LIST
                                      FS-DISJ-TERM FS-CONJ-TERM TYPED-FS-TERM))
                             (FORMAT STREAM "~a . ~a" %R %S))
                            ((FS-LIST-P %S)
                             (FORMAT STREAM "<~a ~a>" %R %S))))
                     (T (FORMAT STREAM "<~a>" %R))))))
  -FIRST
  -REST)

(DEFSTRUCT
  (FS-DISJ-TERM (:INCLUDE FEAT-TERM)
                (:PRINT-FUNCTION PRINT-FS-DISJ-TERM))
  -MEMBERS)

(DEFSTRUCT
  (FS-CONJ-TERM (:INCLUDE FEAT-TERM)
                (:PRINT-FUNCTION PRINT-FS-CONJ-TERM))
  -LVPS)

(DEFSTRUCT
  (NEGATIVE-ATOMS (:INCLUDE FEAT-TERM)
                  (:PRINT-FUNCTION
                    (LAMBDA
                      (ITEM STREAM
                            LEVEL
                            &AUX
                            (%R (NEGATIVE-ATOMS--ATOMS ITEM)))
                      (DECLARE (IGNORE LEVEL))
                      (FORMAT STREAM
                              "-(~a)"
                              (LET ((FS-ATOM+ %R))
                                (IF (NULL FS-ATOM+)
                                    ""
                                    (ZEBU::KB-SEQUENCE-PRINT FS-ATOM+
                                                             NIL
                                                             NIL)))))))
  -ATOMS)

(DEFSTRUCT (FS-ATOM (:INCLUDE FEAT-TERM)
                    (:PRINT-FUNCTION PRINT-FS-ATOM))
           -VALUE)

(DEFSTRUCT
  (TYPED-FS-TERM (:INCLUDE FEAT-TERM)
                 (:PRINT-FUNCTION
                   (LAMBDA
                     (ITEM STREAM
                           LEVEL
                           &AUX
                           (%R (TYPED-FS-TERM--TYPE ITEM))
                           (%S (TYPED-FS-TERM--CONJ ITEM)))
                     (DECLARE (IGNORE LEVEL))
                     (FORMAT STREAM "~a ~a" %R %S))))
  -TYPE
  -CONJ)

(DEFSTRUCT
  (TAGGED-TERM (:INCLUDE FEAT-TERM)
               (:PRINT-FUNCTION
                 (LAMBDA
                   (ITEM STREAM
                         LEVEL
                         &AUX
                         (%R (TAGGED-TERM--TAG ITEM))
                         (%S (TAGGED-TERM--TERM ITEM)))
                   (DECLARE (IGNORE LEVEL))
                   (FORMAT STREAM "~a=~a" %R %S))))
  -TAG
  -TERM)

(DEFSTRUCT
  (FS-VAR (:INCLUDE FEAT-TERM)
          (:PRINT-FUNCTION
            (LAMBDA
              (ITEM STREAM
                    LEVEL
                    &AUX
                    (%R (FS-VAR--NUMBER ITEM))
                    (%S (FS-VAR--NEG-VARS ITEM)))
              (DECLARE (IGNORE LEVEL))
              (COND ((AND (NUMBERP %R)
                          (NEG-VARS-P %S))
                     (FORMAT STREAM "%~a ~a" %R %S))
                    (T (FORMAT STREAM "%~a" %R))))))
  -NUMBER
  -VAR-BOUND
  -NEG-VARS)

(DEFUN FS-ATOM+229
       (FS-ATOM)
       (MAKE-KB-SEQUENCE :FIRST FS-ATOM))

(DEFUN FS-ATOM+230
       (FS-ATOM FS-ATOM+)
       (MAKE-KB-SEQUENCE :FIRST FS-ATOM :REST FS-ATOM+))

(DEFUN LABEL-VALUE-PAIR*231
       (LABEL-VALUE-PAIR LABEL-VALUE-PAIR*)
       (MAKE-KB-SEQUENCE :FIRST
                         LABEL-VALUE-PAIR
                         :REST
                         LABEL-VALUE-PAIR*))

(DEFUN |FEATURE-TERM+,1$232|
       (FEATURE-TERM)
       (MAKE-KB-SEQUENCE :FIRST FEATURE-TERM))

(DEFUN |FEATURE-TERM+,1$233|
       (FEATURE-TERM DUMMY |FEATURE-TERM+,1$|)
       (DECLARE (IGNORE DUMMY))
       (MAKE-KB-SEQUENCE :FIRST FEATURE-TERM :REST |FEATURE-TERM+,1$|))

(DEFUN NEG-VAR+234
       (NEG-VAR)
       (MAKE-KB-SEQUENCE :FIRST NEG-VAR))

(DEFUN NEG-VAR+235
       (NEG-VAR NEG-VAR+)
       (MAKE-KB-SEQUENCE :FIRST NEG-VAR :REST NEG-VAR+))

(DEFUN TYPE+236
       (TYPE)
       (MAKE-KB-SEQUENCE :FIRST TYPE))

(DEFUN TYPE+237
       (TYPE TYPE+)
       (MAKE-KB-SEQUENCE :FIRST TYPE :REST TYPE+))

(DEFUN TYPE-EXPR238
       (DUMMY DUMMY1 TYPE DUMMY2)
       (DECLARE (IGNORE DUMMY2 DUMMY1 DUMMY))
       (MAKE-FS-TYPE :-TYPE TYPE))

(DEFUN TYPE-EXPR239
       (DUMMY DUMMY1 TYPE DUMMY2 IDENTIFIER DUMMY3)
       (DECLARE (IGNORE DUMMY3 DUMMY2 DUMMY1 DUMMY))
       (MAKE-FS-TYPE :-TYPE TYPE :-SORT-P IDENTIFIER))

(DEFUN NEGATION240
       (DUMMY DUMMY1 TYPE DUMMY2)
       (DECLARE (IGNORE DUMMY2 DUMMY1 DUMMY))
       (MAKE-FS-TYPE-NEG :-TYPE TYPE))

(DEFUN DISJUNCTION241
       (DUMMY DUMMY1 TYPE+ DUMMY2)
       (DECLARE (IGNORE DUMMY2 DUMMY1 DUMMY))
       (MAKE-FS-TYPE-DISJ :-TYPES TYPE+))

(DEFUN CONJUNCTION242
       (DUMMY DUMMY1 TYPE+ DUMMY2)
       (DECLARE (IGNORE DUMMY2 DUMMY1 DUMMY))
       (MAKE-FS-TYPE-CONJ :-TYPES TYPE+))

(DEFUN ATOMAR243
       (DUMMY DUMMY1 IDENTIFIER DUMMY2)
       (DECLARE (IGNORE DUMMY2 DUMMY1 DUMMY))
       (MAKE-FS-ATOMAR :-VALUE IDENTIFIER))

(DEFUN ATOMAR244
       (DUMMY DUMMY1 NUMBER DUMMY2)
       (DECLARE (IGNORE DUMMY2 DUMMY1 DUMMY))
       (MAKE-FS-ATOMAR :-VALUE NUMBER))

(DEFUN ATOMAR245
       (DUMMY DUMMY1 STRING DUMMY2)
       (DECLARE (IGNORE DUMMY2 DUMMY1 DUMMY))
       (MAKE-FS-ATOMAR :-VALUE STRING))

(DEFUN NEG-VAR246
       (DUMMY DUMMY1 NUMBER)
       (DECLARE (IGNORE DUMMY1 DUMMY))
       (MAKE-NEG-VAR :-NUMBER NUMBER))

(DEFUN NEG-VARS247
       (DUMMY NEG-VAR+ DUMMY1)
       (DECLARE (IGNORE DUMMY1 DUMMY))
       (MAKE-NEG-VARS :-MEMBERS NEG-VAR+))

(DEFUN FS-VAR248
       (DUMMY NUMBER)
       (DECLARE (IGNORE DUMMY))
       (MAKE-FS-VAR :-NUMBER NUMBER))

(DEFUN FS-VAR249
       (DUMMY NUMBER NEG-VARS)
       (DECLARE (IGNORE DUMMY))
       (MAKE-FS-VAR :-NUMBER NUMBER :-NEG-VARS NEG-VARS))

(DEFUN LABEL-VALUE-PAIR250
       (DUMMY IDENTIFIER FEATURE-TERM DUMMY1)
       (DECLARE (IGNORE DUMMY1 DUMMY))
       (MAKE-LABEL-VALUE-PAIR :-LABEL
                              IDENTIFIER
                              :-VALUE
                              FEATURE-TERM))

(DEFUN FS-ATOM251
       (IDENTIFIER)
       (MAKE-FS-ATOM :-VALUE IDENTIFIER))

(DEFUN FS-ATOM252
       (NUMBER)
       (MAKE-FS-ATOM :-VALUE NUMBER))

(DEFUN FS-ATOM253
       (STRING)
       (MAKE-FS-ATOM :-VALUE STRING))

(DEFUN FS-DISJ-TERM254
       (DUMMY |FEATURE-TERM+,1$| DUMMY1)
       (DECLARE (IGNORE DUMMY1 DUMMY))
       (MAKE-FS-DISJ-TERM :-MEMBERS |FEATURE-TERM+,1$|))

(DEFUN FS-CONJ-TERM255
       (DUMMY LABEL-VALUE-PAIR* DUMMY1)
       (DECLARE (IGNORE DUMMY1 DUMMY))
       (MAKE-FS-CONJ-TERM :-LVPS LABEL-VALUE-PAIR*))

(DEFUN FS-LIST-REST256
       (FEATURE-TERM.1 DUMMY FEATURE-TERM.2)
       (DECLARE (IGNORE DUMMY))
       (MAKE-FS-LIST :-FIRST FEATURE-TERM.1 :-REST FEATURE-TERM.2))

(DEFUN FS-LIST-REST257
       (FEATURE-TERM FS-LIST-REST)
       (MAKE-FS-LIST :-FIRST FEATURE-TERM :-REST FS-LIST-REST))

(DEFUN FS-LIST-REST258
       (FEATURE-TERM)
       (MAKE-FS-LIST :-FIRST
                     FEATURE-TERM
                     :-REST
                     EMPTY-FS-LIST))

(DEFUN FS-LIST259
       (DUMMY)
       (DECLARE (IGNORE DUMMY))
       (MAKE-EMPTY-FS-LIST))

(DEFUN FS-LIST260
       (DUMMY DUMMY1)
       (DECLARE (IGNORE DUMMY1 DUMMY))
       (MAKE-EMPTY-FS-LIST))

(DEFUN FS-LIST261
       (DUMMY FEATURE-TERM DUMMY1)
       (DECLARE (IGNORE DUMMY1 DUMMY))
       (MAKE-FS-LIST :-FIRST
                     FEATURE-TERM
                     :-REST
                     EMPTY-FS-LIST))

(DEFUN FS-LIST262
       (DUMMY FEATURE-TERM FS-LIST-REST DUMMY1)
       (DECLARE (IGNORE DUMMY1 DUMMY))
       (MAKE-FS-LIST :-FIRST FEATURE-TERM :-REST FS-LIST-REST))

(DEFUN TYPED-FS-TERM263
       (TYPE-EXPR FS-CONJ-TERM)
       (MAKE-TYPED-FS-TERM :-TYPE TYPE-EXPR :-CONJ FS-CONJ-TERM))

(DEFUN NEGATIVE-ATOMS264
       (DUMMY FS-ATOM+ DUMMY1)
       (DECLARE (IGNORE DUMMY1 DUMMY))
       (MAKE-NEGATIVE-ATOMS :-ATOMS FS-ATOM+))

(DEFUN TAGGED-TERM265
       (FS-VAR DUMMY UNTAGGED-TERM)
       (DECLARE (IGNORE DUMMY))
       (MAKE-TAGGED-TERM :-TAG FS-VAR :-TERM UNTAGGED-TERM))

